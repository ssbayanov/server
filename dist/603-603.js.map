{"version":3,"file":"603-603.js?v=3751c8af799280e3c269","mappings":"mKAGA,MAAMA,GAAU,QAAW,iBAAiBC,SAAQ,GAAMC,QAC1D,IAAIC,EAUJ,SAASC,EAAYC,EAAOC,EAAa,IAClCH,IACHA,EAAa,IAAI,EAAAI,WAAW,IAE9B,MAAMC,EAeR,WACE,IAAIC,EACJ,MAAMC,EAAWC,OAAOC,SAAqE,OAA3DH,EAAKT,EAAQa,QAAQ,mCAA6CJ,EAAK,KACzG,OAAOK,KAAKC,IACVD,KAAKE,IACHN,EACA,GAGF,EAGJ,CA3B0BO,GACxB,IAAIC,EASJ,OARIb,GACFa,EAAUf,EAAWgB,OAAO,IAAIC,OAAOf,GAAQC,GAC3CY,EAAQG,OAASf,IACnBY,EAAUA,EAAQE,OAAOjB,EAAWgB,OAAOd,EAAOC,EAAaY,EAAQG,WAGzEH,EAAU,EAAAI,WAAWC,IAAIjB,GAAYkB,IAAKC,GAAOtB,EAAWuB,MAAMD,KAAQ,GAErEP,EAAQM,IAAKE,GAAUA,EAAMC,QAAQnB,GAC9C,CACA,SAASoB,EAAeC,GACtB,EAAAP,WAAWQ,IAAID,EACjB,C","sources":["webpack:///nextcloud/node_modules/@nextcloud/vue/dist/chunks/emoji-V6ytyzoR.mjs"],"sourcesContent":["import { getBuilder } from \"@nextcloud/browser-storage\";\nimport { EmojiIndex, frequently } from \"emoji-mart-vue-fast\";\nimport data from \"emoji-mart-vue-fast/data/all.json\";\nconst storage = getBuilder(\"nextcloud-vue\").persist(true).build();\nlet emojiIndex;\nvar EmojiSkinTone = /* @__PURE__ */ ((EmojiSkinTone2) => {\n  EmojiSkinTone2[EmojiSkinTone2[\"Neutral\"] = 1] = \"Neutral\";\n  EmojiSkinTone2[EmojiSkinTone2[\"Light\"] = 2] = \"Light\";\n  EmojiSkinTone2[EmojiSkinTone2[\"MediumLight\"] = 3] = \"MediumLight\";\n  EmojiSkinTone2[EmojiSkinTone2[\"Medium\"] = 4] = \"Medium\";\n  EmojiSkinTone2[EmojiSkinTone2[\"MediumDark\"] = 5] = \"MediumDark\";\n  EmojiSkinTone2[EmojiSkinTone2[\"Dark\"] = 6] = \"Dark\";\n  return EmojiSkinTone2;\n})(EmojiSkinTone || {});\nfunction emojiSearch(query, maxResults = 10) {\n  if (!emojiIndex) {\n    emojiIndex = new EmojiIndex(data);\n  }\n  const currentSkinTone = getCurrentSkinTone();\n  let results;\n  if (query) {\n    results = emojiIndex.search(\":\".concat(query), maxResults);\n    if (results.length < maxResults) {\n      results = results.concat(emojiIndex.search(query, maxResults - results.length));\n    }\n  } else {\n    results = frequently.get(maxResults).map((id) => emojiIndex.emoji(id)) || [];\n  }\n  return results.map((emoji) => emoji.getSkin(currentSkinTone));\n}\nfunction emojiAddRecent(emojiData) {\n  frequently.add(emojiData);\n}\nfunction getCurrentSkinTone() {\n  var _a;\n  const skinTone = Number.parseInt((_a = storage.getItem(\"NcEmojiPicker::currentSkinTone\")) != null ? _a : \"1\");\n  return Math.min(\n    Math.max(\n      skinTone,\n      1\n      /* Neutral */\n    ),\n    6\n    /* Dark */\n  );\n}\nfunction setCurrentSkinTone(skinTone) {\n  skinTone = Math.min(\n    Math.max(\n      skinTone,\n      1\n      /* Neutral */\n    ),\n    6\n    /* Dark */\n  );\n  storage.setItem(\"NcEmojiPicker::currentSkinTone\", skinTone.toString());\n}\nexport {\n  EmojiSkinTone as E,\n  emojiAddRecent as a,\n  emojiSearch as e,\n  getCurrentSkinTone as g,\n  setCurrentSkinTone as s\n};\n//# sourceMappingURL=emoji-V6ytyzoR.mjs.map\n"],"names":["storage","persist","build","emojiIndex","emojiSearch","query","maxResults","EmojiIndex","currentSkinTone","_a","skinTone","Number","parseInt","getItem","Math","min","max","getCurrentSkinTone","results","search","concat","length","frequently","get","map","id","emoji","getSkin","emojiAddRecent","emojiData","add"],"sourceRoot":""}